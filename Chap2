import pandas as pd
import numpy as np
data=pd.read_csv('2.5.csv')
data.head(3)

#도수와 계급 계산 
freq,bins=np.histogram(data, bins=6, range=(15.5, 33.5))
bins

freq_class=['15~18.5', '18.5~21.5', '21.5~24.5', '24.5~27.5', '27.5~30.5', '30.5~33.5']
freq_table=pd.DataFrame({'frequency':freq}, index=pd.Index(freq_class, name='class'))
freq_table

r_freq=freq/freq.sum()
cum_r_freq=np.cumsum(r_freq)
freq_table['relative frequency']=r_freq
freq_table['cumulative frequency']=cum_r_freq
freq_table

import matplotlib.pyplot as plt
plt.hist(data)

plt.hist(data, bins=6)

plt.hist(data, bins=6, histtype='step')

import seaborn as sns
sns.histplot(data, bins=6)
plt.title("dist1")
plt.show

import seaborn as sns
sns.ecdfplot(data['value']) #ecdf: 경험적 누적 밀도함수
plt.title("cumdist")
plt.show

import seaborn as sns
sns.kdeplot(data['value']) #data파일이름: data 변수이름:value
plt.title('pdf')
plt.show()

sns.countplot(data['value'])
plt.title('countplot')
plt.show()

sns.boxplot(data['value'])
plt.title("boxplot")
plt.show()

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as pit

titanic=sns.load_dataset("titanic")
titanic.head()

titanic.info() #자료형 확인

titanic['survived']=titanic['survived'].astype(object) #astype ():자료형 변경
titanic['pclass']=titanic['pclass'].astype(object)

titanic.describe() #data에서 수치형 자료만 인식하여 나타냄

titanic.describe(include='all')

titanic.corr()

import pandas as pd
titanic.groupby(['pclass']).describe()[['fare']] #pclass의 수준에 따른 fare의 기초통계량
titanic.groupby(['pclass']).mean()[['fare']]
titanic.groupby(['pclass']).count()[['survived']]
titanic.groupby(['pclass']).count()[['survived', 'sex']]

!python han-font.py
exec(open('han-font.py').read())

import numpy as np
import pandas as pd
import seaborn as sns
from matplotlib import font_manager, rc

path='C:/windows/Fonts/malgun.ttf'
font_name=font_manager.FontProperties(fname=path).get_name()
rc('font', family=font_name)
plt.rcParams['axes.unicode_minus'] = False

iris=sns.load_dataset("iris")
titanic=sns.load_dataset("titanic")
tips=sns.load_dataset("tips")
flights=sns.load_dataset("flights")

x=iris.petal_length.values
sns.kdeplot(x)
plt.title("Iris 데이터 중, 꽃잎의 길이에 대한 Kernel Density Plot")
plt.show()

#1차원 분포
sns.countplot(x="class", data=titanic)
plt.title("타이타닉호의 긱 클래스별, 승객 수")
plt.show()

sns.countplot(x="day", data=tips)
plt.title("요일별 팁을 준 횟수")
plt.show()

#2차원 분포
sns.jointplot(x="sepal_length", y="sepal_width", data=iris)
plt.suptitle("꽃받침의 길이와 넓이의 Joint Plot", y=1.02)
plt.show()

#seaborn을 이용한 시각화
sns.jointplot(x="sepal_length", y="sepal_width", data=iris, kind='kde')
plt.suptitle("꽃받침의 길이와 넓이의 Joint Plot과 Kernel Density Plot", y=1.02)
plt.show()

sns.lmplot(x="total_bill", y="tip", data=tips, size=7)
plt.suptitle("꽃받침의 길이와 넓이의 Joint Plot과 Kernel Density Plot", y=1.02)
plt.show()

sns.pairplot(iris)

sns.pairplot(iris, hue="species", markers=["o", "s", "D"])
plt.title("Iris Pair Plot, Hue로 꽃의 종을 시각화")
plt.show()

sns.lmplot(x="total_bill", y="tip", hue="smoker", data=tips, markers=["o", "s"])
plt.suptitle("꽃받침의 길이와 넓이의 Joint Plot과 Kernel Density Plot", y=1.02)
plt.show()

#chap2-2
!python han-font.py
exec(open('han-font.py').read())

import numpy as np
import pandas as pd
import seaborn as sns
from matplotlib import font_manager, rc

path='C:/windows/Fonts/malgun.ttf'
font_name=font_manager.FontProperties(fname=path).get_name()
rc('font', family=font_name)
plt.rcParams['axes.unicode_minus'] = False

iris=sns.load_dataset("iris")
titanic=sns.load_dataset("titanic")
tips=sns.load_dataset("tips")
flights=sns.load_dataset("flights")

# aggfunc: 집게함수 (size:빈도, count:개수(모든 변수의 개수), sum, median)
titanic_size=titanic.pivot_table(index = 'class', columns = 'sex',
                                 aggfunc = 'size')
titanic_size

titanic.info()
titanic

tips_mean=tips.pivot_table(index="smoker", columns='sex',
                          aggfunc='mean')
tips_mean

df=titanic.iloc[:,[ 2, 3, 6, 8]]
df_size=df.pivot_table(index='class', columns='sex',
                       aggfunc='mean')
df_size

#2차원-연속형+범주형
sns.barplot(x="day", y="total_bill", data=tips)
plt.title("요일별, 전체 팁")
plt.show()

sns.boxplot(x='day', y='total_bill', data=tips)
plt.title("요일 별 전체 팁의 Box Plot")
plt.show()

sns.violinplot(x='day', y='total_bill', data=tips)
plt.title('요일 별 전체 팁의 Violin Plot')
plt.show()

import numpy as np
np.random.seed(0)
sns.stripplot(x='day', y='total_bill', data=tips, jitter=True )
plt.title("요일 별 전체 팁의 Strip Plot")
plt.show()

sns.barplot(x='day', y='total_bill', hue='sex', data=tips)
plt.title("요일 별, 성별 전체 팁의 Histogram")
plt.show()

sns.boxplot(x='day', y='total_bill', hue='sex', data=tips)
plt.title("요일 별, 성별 전체 팁의 Box Plot")
plt.show()

plt.title('Boxplot과 Strip Plot으로 표현한, 요일 별 팁')
sns.boxplot(x='tip', y='day', data=tips, whis=np.inf)
sns.stripplot(x='tip', y='day', data=tips, jitter=True, color='0.4')
plt.show()